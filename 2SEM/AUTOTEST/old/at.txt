/*1. Назовем весом столбца матрицы число, равное сумме модулей разностей соседних
элементов этого столбца, т.е. |a[i][j] - a[i+1][j]| для i=0,...,N-2.
В матрице должно присутствовать хотя бы два столбца. Требуется переставить
столбцы матрицы так, чтобы они стояли по убыванию (невозрастанию) своих весов
(при возрастании номера столбца).
После этого надо вычислить произведение полученной матрицы A на ее
транспонированную первую строку b, т.е. получить вектор c=Ab.
Полученные матрицу и вектор вывести в файл output.txt.*/


/*2. Будем говорить, что столбец j2 больше столбца j1, если сумма разностей
a[i][j2] - a[i][j1], i=0,...,N-1, положительна. Требуется переставить столбцы
матрицы так, чтобы при возрастании номера столбца они шли по возрастанию
(неубыванию) в смысле указанной операции сравнения.
После этого надо вычислить произведение полученной матрицы A на ее
транспонированную последнюю строку b, т.е. получить вектор c=Ab.
Полученные матрицу и вектор вывести в файл output.txt.*/


/*3. Назовем весом столбца матрицы число, равное среднему гармоническому
абсолютных значений элементов этого столбца. Если в столбце присутствует 0 (<1.e-15),
то среднее гармоническое полагаем равным нулю. Требуется переставить столбцы
матрицы так, чтобы их веса убывали (не возрастали) при возрастании номера столбца.
После этого надо вычислить произведение полученной матрицы A на ее
транспонированную последнюю строку b, т.е. получить вектор c=Ab.
Полученные матрицу и вектор вывести в файл output.txt.*/


/*4. Назовем весом столбца матрицы число, равное сумме только положительных
разностей a[i+1][j] - a[i][j] соседних элементов этого столбца
(т.е. возрастающих переходов от i к i+1 для i=0,...,N-2). Если таких
разностей нет, то вес столюца положим равным нулю. Требуется переставить
столбцы матрицы так, чтобы они стояли по своих убыванию (невозрастанию) весов.
После этого надо вычислить произведение полученной матрицы A на ее
транспонированную первую строку b, т.е. получить вектор c=Ab.
Полученные матрицу и вектор вывести в файл output.txt.*/



/*5. Будем говорить, что строка i2 больше строки i1, если сумма разностей a[i2][j] - a[i1][j],
j=0,...,M-1, положительна. Требуется переставить строки матрицы так, чтобы при возрастании
номера строки они шли по возрастанию (неубыванию) в смысле указанной операции сравнения.
После этого надо вычислить произведение полученной матрицы A на ее
транспонированную последнюю строку b, т.е. получить вектор c=Ab.
Полученные матрицу и вектор вывести в файл output.txt.*/



/*6. Назовем весом строки матрицы число, равное среднему гармоническому абсолютных
значений элементов этой строки. Если в строке присутствует 0 (<1.e-15),
то среднее гармоническое полагаем равным нулю. Требуется переставить строки матрицы так,
чтобы их веса убывали (не возрастали) при возрастании номера строки.
После этого надо вычислить произведение полученной матрицы A на ее
транспонированную последнюю строку b, т.е. получить вектор c=Ab.
Полученные матрицу и вектор вывести в файл output.txt.*/



/*7. Назовем нормой столбца матрицы число, равное сумме модулей элементов этого столбца.
Требуется переставить столбцы матрицы так, чтобы они стояли по возрастанию
(неубыванию) норм (при возрастании номера столбца).
После этого надо вычислить произведение полученной матрицы A на ее
транспонированную первую строку b, т.е. получить вектор c=Ab.
Полученные матрицу и вектор вывести в файл output.txt.*/



/*8. Назовем весом строки матрицы число, равное сумме только положительных разностей
a[i][j+1] - a[i][j] соседних элементов этой строки (т.е. возрастающих переходов
от j к j+1 для j=0,...,M-2). Если таких разностей нет, то вес строки положим равным нулю.
Требуется переставить строки матрицы так, чтобы они стояли по убыванию (невозрастанию)
своих весов. После этого надо вычислить произведение полученной матрицы A на ее
транспонированную первую строку b, т.е. получить вектор c=Ab.
Полученные матрицу и вектор вывести в файл output.txt.*/



/*9. Назовем весом столбца матрицы число, равное максимальному элементу
этого столбца. Требуется переставить столбцы матрицы так, чтобы их веса
возрастали (не убывали) при возрастании номера столбца.
После этого надо вычислить произведение полученной матрицы A на ее
транспонированную первую строку b, т.е. получить вектор c=Ab.
Полученные матрицу и вектор вывести в файл output.txt. */



/*10. Назовем нормой столбца матрицы число, равное сумме квадратов элементов
этого столбца. Требуется переставить столбцы матрицы так, чтобы они стояли
по возрастанию (неубыванию) норм (при возрастании номера столбца).
После этого надо вычислить произведение полученной матрицы A на ее
транспонированную последнюю строку b, т.е. получить вектор c=Ab.
Полученные матрицу и вектор вывести в файл output.txt. */




/*11. Назовем весом строки матрицы число, равное сумме модулей разностей соседних
элементов этой строки, т.е. |a[i][j] - a[i][j+1]| для i=0,...,N-2.
В матрице должно присутствовать хотя бы два столбца. Требуется переставить
строки матрицы так, чтобы они стояли по убыванию (невозрастанию) своих весов
(при возрастании номера строки).
После этого надо вычислить произведение полученной матрицы A на ее
транспонированную первую строку b, т.е. получить вектор c=Ab.
Полученные матрицу и вектор вывести в файл output.txt.*/



/*12. Назовем нормой строки матрицы число, равное сумме модулей элементов этой строки.
Требуется переставить строки матрицы так, чтобы они стояли по возрастанию
(неубыванию) норм (при возрастании номера строки).
После этого надо вычислить произведение полученной матрицы A на ее
транспонированную первую строку b, т.е. получить вектор c=Ab.
Полученные матрицу и вектор вывести в файл output.txt.*/



/*13. Назовем весом столбца матрицы число, равное разности между максимальным и минимальным элементами
этого столбца. Требуется переставить столбцы матрицы так, чтобы их веса
возрастали (не убывали) при возрастании номера столбца.
После этого надо вычислить произведение полученной матрицы A на ее
транспонированную последнюю строку b, т.е. получить вектор c=Ab.
Полученные матрицу и вектор вывести в файл output.txt. */



/*14. Требуется перестаВить столбцы матрицы так, чтобы они оказались упорядочены
по Возрастанию (неубыВанию) В лексикографическом порядке, т.е. столбец j1 меньше
столбца j2, если найдется такое i, что а[i][j1] < а[i][j2], но а[k][j1] = а[к][j2] при k<i.
После этого надо Вычислить произведение полученной матрицы А на ее
транспонироВанную перВую строку b, т.е. получить Вектор с=Ab.
Полученные матрицу и Вектор ВыВести В файл */


/*15. Требуется перестаВить строки матрицы так, чтобы они оказались упорядочены
по Возрастанию (неубыВанию) В лексикографическом порядке, т.е. строка j1 меньше
строки j2, если найдется такое i, что а[j1][i] < а[j2][i], но а[j1][k] = а[j2][k] при k<i.
После этого надо Вычислить произведение полученной матрицы А на ее
транспонироВанную перВую строку b, т.е. получить Вектор с=Ab.
Полученные матрицу и Вектор ВыВести В файл */

