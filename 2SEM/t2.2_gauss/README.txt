ЦЫБУЛИН ЕГОР 108 группа (2025 год)


Условие: Реализовать процедуру приведения матрицы к ступенчатому виду методом Гаусса. Найти ранг матрицы размера mxn, найти определитель матрицы размера nxn, найти решение СЛУ (при условии, что СЛУ определена, то есть матрица должна быть квадратной и невырожденной), найти обратную матрицу к заданной.


Входные данные: В зависимости от проверяемой задачи:
input_rk.txt — входные данные для нахождения ранга матрицы: в первой строке количество строк и количество столбцов, далее непосредственно матрица; допускается несколько тестов в одном файле.
input_det.txt — аналогично, но для нахождения определителя; даже учитывая, что определитель ищется для квадратной матрицы, необходимо указывать число строк и столбцов в самом начале.
input_sys.txt — аналогично, но справа от матрицы приписывается n+1-й столбец свободных членов.
input_inv.txt — аналогично с входным файлом для определителя.
Непосредственно в программе можно поменять значение погрешности в main.c, а также в дополнительных тестах можно изменить некоторые данные.


Выходные данные: Программа выводит в output.txt название набора тестов, изначальную матрицу, матрицу ступенчатого вида, её ранг или определитель (в зависимости от теста); в задаче на решение СЛУ, соответственно, выводит решение; в задаче на поиск обратной матрицы, соответственно, выводит вместо матрицы ступенчатого вида, матрицу обратную.


Проверка производилась: Linux Ubuntu 22.04.3 LTS AMD64 (WSL 2 for Windows 11) + gcc 11.4.0


Запуск программы:
gcc main.c matrix_functions.c gaussian_functions.c tests.c -lm
./a.out


Общее описание: В файле main.c есть процедуры тестирования программы по входным данным из текстовых файлов. В функции int main() есть также три теста на матрицы, которые генерируются по определённым формулам. Строки 197-204 можно поочерёдно отключать, чтобы упрощать тестирование. Закомментировав строку 195, можно перенаправить вывод в консоль. Также в процедурах тестирования, которые находятся в main.c, можно подключить функцию, которая умножает все элементы на какую-то константу. По умолчанию она выключена, потому что проще вручную изменить входные данные в нужном текстовом файле.

В файле matrix_functions.c находятся базовые матричные процедуры: создание матрицы заданного размера, освобождение памяти, выделенной под матрицу, печать матрицы, умножение двух матриц, умножение матрицы на константу.

В файле gaussian_functions.c находятся непосредственно процедуры, связанные с решением задачи. В файле test.c находится некоторые функции, которые генерируют матрицу по заданной формуле.

Дополнительно отмечу, что программа сначала находит норму заданной матрицы, потом приводит её к единице и только после этого начинает манипуляции с матрицей. Именно поэтому по умолчанию eps = 1e-15 в int main().

К сожалению, обработка тривиальных ошибок слишком утомительна, поэтому если, например, подать в процедуру поиска определителя или решения СЛУ неквадратную матрицу или нечисловое выражение, то она выдаст -1 и на этом прекратит тестирование задачи.


Отчёт по тестам:
1. В тесте матрицей Гильберта программа падает при n > 15.
2. Процедура приведения к ступенчатому виду устойчива к любому масштабированию.
3. Тест на почти параллельные векторы процедура прошла (см. последний тест на ранг).
4. Тесты на поиск определителя аналогично проходятся вне зависимости от масштаба задачи.
5. С тестом на решение СЛУ программа аналогично справляется (конечно, при условии, что матрица квадратная).
6. Большинство тестов было взято из данного файла: http://v-dinsky.info/2024/files-1/require1_2_2.pdf, что особенно упрощает проверку задач на обратные матрицы (все ответы правильные, я проверил, но процедуру автоматической проверки писать не стал).